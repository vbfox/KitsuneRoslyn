<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{DACE07DD-0168-4656-A844-5779FA7F10EA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>BlackFox.KitsuneRoslyn</RootNamespace>
    <AssemblyName>BlackFox.KitsuneRoslyn</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>Profile7</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="AdditionalAction.cs" />
    <Compile Include="CodeFixProviderBase.cs" />
    <Compile Include="CodeRefactoringProviderBase.cs" />
    <Compile Include="FromRoslynOfficialSource\CSharpExtensions\ITypeSymbolExtensions.cs" />
    <Compile Include="FromRoslynOfficialSource\CSharpExtensions\ITypeSymbolExtensions.TypeSyntaxGeneratorVisitor.cs" />
    <Compile Include="FromRoslynOfficialSource\CSharpExtensions\StringExtensions.cs" />
    <Compile Include="FromRoslynOfficialSource\CSharpExtensions\SyntaxListExtensions.cs" />
    <Compile Include="FromRoslynOfficialSource\CSharpExtensions\SyntaxNodeExtensions.cs" />
    <Compile Include="FromRoslynOfficialSource\SharedExtensions\ISymbolExtensions.cs" />
    <Compile Include="NoNewGuid\NoNewGuidAnalyzer.cs" />
    <Compile Include="NoNewGuid\ReplaceNewGuidWithGuidEmpty.cs" />
    <Compile Include="NoStringEmpty\NoStringEmptyAnalyzer.cs" />
    <Compile Include="NoStringEmpty\ReplaceStringEmptyWithEmptyLiteral.cs" />
    <Compile Include="OverloadDefinition.cs" />
    <Compile Include="Parameter.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="PropertyConversions\PropertyAnalyzer.cs" />
    <Compile Include="PropertyConversions\PropertyCodeFix.cs" />
    <Compile Include="PropertyConversions\PropertyConversionAnalysis.cs" />
    <Compile Include="PropertyConversions\PropertyConversionClassification.cs" />
    <Compile Include="PropertyConversions\PropertyRefactoring.cs" />
    <Compile Include="Replacement.cs" />
    <Compile Include="ReplacementCodeFixProviderBase.cs" />
    <Compile Include="ReplacementNodeCodeFixProviderBase.cs" />
    <Compile Include="RoslynExtensions\CompilationExtensions.cs" />
    <Compile Include="RoslynExtensions\DocumentExtensions.cs" />
    <Compile Include="RoslynExtensions\ExpressionSyntaxExtensions.cs" />
    <Compile Include="RoslynExtensions\MethodCanBeMadeStaticAnalysis.cs" />
    <Compile Include="RoslynExtensions\MethodCanBeMadeStaticAnalysisExtensions.cs" />
    <Compile Include="RoslynExtensions\PropertyDeclarationSyntaxExtensions.cs" />
    <Compile Include="RoslynExtensions\SemanticModelExtensions.cs" />
    <Compile Include="RoslynExtensions\SyntaxFactoryAdditions.cs" />
    <Compile Include="RoslynExtensions\SyntaxNodeCanBeMadeStaticAnalysis.cs" />
    <Compile Include="RoslynExtensions\SyntaxNodeExtensions.cs" />
    <Compile Include="RoslynExtensions\SyntaxNodeOrTokenExtensions.cs" />
    <Compile Include="RoslynExtensions\TypeSymbolExtensions.cs" />
    <Compile Include="SimpleCodeFixProviderBase.cs" />
    <Compile Include="StringConcatenation\CanReplaceConcatOperator\CanReplaceConcatOperatorAnalyzer.cs" />
    <Compile Include="StringConcatenation\CanReplaceConcatOperator\ReplaceConcatenationWithSingleString.cs" />
    <Compile Include="StringConcatenation\CanReplaceConcatOperator\ReplaceConcatenationWithStringFormat.cs" />
    <Compile Include="StringConcatenation\CanReplaceConcatOperator\StringConcatOperatorClassification.cs" />
    <Compile Include="StringConcatenation\CanReplaceConcatOperator\StringConcatOperatorInfo.cs" />
    <Compile Include="StringConcatenation\NoStringConcat\NoStringConcatAnalyzer.cs" />
    <Compile Include="StringConcatenation\NoStringConcat\ReplaceStringConcatWithSingleString.cs" />
    <Compile Include="StringConcatenation\NoStringConcat\ReplaceStringConcatWithStringFormat.cs" />
    <Compile Include="StringConcatenation\NoStringConcat\StringConcatClassification.cs" />
    <Compile Include="StringConcatenation\NoStringConcat\StringConcatIdentification.cs" />
    <Compile Include="StringConcatenation\NoStringConcat\StringConcatInfo.cs" />
    <Compile Include="StringConcatenation\StringCoalescing.cs" />
    <Compile Include="SyntaxDifferences.cs" />
    <Compile Include="SyntaxEquivalence.cs" />
    <Compile Include="TernaryOperators\PotentialTernaryOperator.cs" />
    <Compile Include="TernaryOperators\PotentialTernaryOperatorClassification.cs" />
    <Compile Include="TernaryOperators\TernaryReplacable.cs" />
    <Compile Include="TernaryOperators\UseTernaryOperatorAnalyzer.cs" />
    <Compile Include="TernaryOperators\UseTernaryOperatorCodeFix.cs" />
    <Compile Include="VarConversion\TypeToVarAnalyzer.cs" />
    <Compile Include="VarConversion\TypeToVarCodeFix.cs" />
    <Compile Include="VarConversion\VarToTypeAnalyzer.cs" />
    <Compile Include="VarConversion\VarToTypeCodeFix.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Diagnostic.nuspec">
      <SubType>Designer</SubType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="packages.config" />
    <None Include="tools\install.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="tools\uninstall.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="ReadMe.txt" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CodeAnalysis">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Common.1.0.0-beta1-20141031-01\lib\portable-net45+win8\Microsoft.CodeAnalysis.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.1.0.0-beta1-20141031-01\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.CSharp.Workspaces">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.CSharp.Workspaces.1.0.0-beta1-20141031-01\lib\portable-net45+win8\Microsoft.CodeAnalysis.CSharp.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.CodeAnalysis.Workspaces">
      <HintPath>..\..\packages\Microsoft.CodeAnalysis.Workspaces.Common.1.0.0-beta1-20141031-01\lib\portable-net45+win8\Microsoft.CodeAnalysis.Workspaces.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Collections.Immutable">
      <HintPath>..\..\packages\System.Collections.Immutable.1.1.32-beta\lib\portable-net45+win8+wp8+wpa81\System.Collections.Immutable.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.AttributedModel">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.AttributedModel.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Convention">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Convention.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Hosting">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Hosting.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.Runtime">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.Runtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Composition.TypedParts">
      <HintPath>..\..\packages\Microsoft.Composition.1.0.27\lib\portable-net45+win8+wp8+wpa81\System.Composition.TypedParts.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System.Reflection.Metadata">
      <HintPath>..\..\packages\System.Reflection.Metadata.1.0.17-beta\lib\portable-net45+win8\System.Reflection.Metadata.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="FromRoslynOfficialSource\License.txt" />
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>if exist Diagnostic.nuspec if exist "$(SolutionDir)\packages\NuGet.CommandLine.2.8.2\tools\NuGet.exe" "$(SolutionDir)\packages\NuGet.CommandLine.2.8.2\tools\NuGet.exe" pack Diagnostic.nuspec -OutputDirectory .</PostBuildEvent>
    <RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>